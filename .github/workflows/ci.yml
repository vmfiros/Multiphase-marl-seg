name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Smoke test (imports + baseline forward)
        env:
          PYTHONPATH: .
        run: |
          python - <<'PY'
          import torch
          # ---- baseline forward in eval mode (avoids BatchNorm training constraint) ----
          from src.models.baselines.unet3d import UNet3D
          m = UNet3D(in_channels=2, out_channels=1, base_ch=8, depth=3).eval()
          with torch.no_grad():
              y,_ = m(torch.randn(1,2,8,8,8))
          assert y.shape == (1,1,8,8,8)
          print("OK: UNet3D baseline forward", y.shape)

          # ---- import heavy model only (no forward in CI to keep memory low) ----
          from src.models.swin_unet_cpaf import SwinUNetCPAF
          _ = SwinUNetCPAF
          print("OK: imported Swin_UNet_CPAF")
          PY
